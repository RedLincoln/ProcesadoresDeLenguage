L 6:
		R6=R7;		 # Nuevo marco
		R7=R7-16;		 # Reservamos espacio para variables locales
		R0 = R6+8;		 # Almacenamos dirección relativa en registro
		R1 = 0; 		# Guardamos valor de constante numerica
		D(R0) = R1;		 # Guardamos valor de registro en memoria
		R0 = R6-4;		 # Almacenamos dirección relativa en registro
		R1 = 2; 		# Guardamos valor de constante numerica
		I(R0) = R1;		 # Guardamos valor de registro en memoria
		R0 = R6+8;		 # Almacenamos dirección relativa en registro
		R1 = I(R6-4)		 # Copiamos valor en memoria relativa a registro;
		D(R0) = R1;		 # Guardamos valor de registro en memoria
		R7=R6;		 # Liberamos memoria local
		R6=P(R7+4);		 # Recuperamos marco
		R0 = P(R7);		 # Recuperamos etiqueta de retorno
		GT(R0);
L 7:
		R6=R7;		 # Nuevo marco
		R7=R7-0;		 # Reservamos espacio para variables locales
		R0 = 0; 		# Guardamos valor de constante numerica
		R0 = R0 * 4;		 # multiplicamos indice por bytes del tipo
		I(R7-4) = R0;
		R0 = R6+16; 		 # Almacenamos dirección relativa de acceso de array
		R0 = I(R7-4) + R0;
		R1 = I(R6+8)		 # Copiamos valor en memoria relativa a registro;
		R2 = I(R6+12)		 # Copiamos valor en memoria relativa a registro;
		R2 = R2+R1;		 # Operaciones numericas
		I(R0) = R2;		 # Guardamos valor de registro en memoria
		R0 = 0; 		# Guardamos valor de constante numerica
		R0 = R0 * 4;		 # multiplicamos indice por bytes del tipo
		I(R7-4) = R0;
		R0 = R6+16; 		 # Almacenamos dirección relativa de acceso de array
		R0 = I(R7-4) + R0;
		R1 = 0; 		# Guardamos valor de constante numerica
		R1 = R1 * 4;		 # multiplicamos indice por bytes del tipo
		I(R7-4) = R1;
		R1 = R6+16; 		 # Almacenamos dirección relativa de acceso de array
		R1 = I(R7-4) + R1;
		R1 = I(R1);		 # Almacenamos valor de array (addr. relativo)
		R1 = R1 * -1;
		I(R0) = R1;		 # Guardamos valor de registro en memoria
		R7=R6;		 # Liberamos memoria local
		R6=P(R7+4);		 # Recuperamos marco
		R0 = P(R7);		 # Recuperamos etiqueta de retorno
		GT(R0);
L 8:
		R6=R7;		 # Nuevo marco
		R7=R7-20;		 # Reservamos espacio para variables locales
		R0 = R6+8;		 # Almacenamos dirección relativa en registro
		RR0 = 0.100000; 		# Guardamos valor de constante numerica
		D(R0) = RR0;		 # Guardamos valor de registro en memoria
		R0 = 0; 		# Guardamos valor de constante numerica
		R0 = R0 * 4;		 # multiplicamos indice por bytes del tipo
		I(R7-4) = R0;
		R0 = R6-8; 		 # Almacenamos dirección relativa de acceso de array
		R0 = I(R7-4) + R0;
		R1 = 3; 		# Guardamos valor de constante numerica
		I(R0) = R1;		 # Guardamos valor de registro en memoria
		R0 = R6-20;		 # Almacenamos dirección relativa en registro
		R1 = R6+73692;		 # Almacenamos dirección relativa en registro
		R7=R6;		 # Liberamos memoria local
		R6=P(R7+4);		 # Recuperamos marco
		R0 = P(R7);		 # Recuperamos etiqueta de retorno
		GT(R0);
